import streamlit as st
import seaborn as sns
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import r2_score, mean_absolute_error, mean_squared_error

#make containers
header = st.container()
datasets = st.container()
features = st.container()
model_training = st.container()

with header:
    st.title('Welcome to my awesome project')
    st.text('In this project, I will work on the Titanic dataset')

with datasets:
    st.header('Titanic Dataset')
    st.text('I have downloaded the dataset')
    

    df = sns.load_dataset('titanic')
    df = df.dropna()
    st.dataframe(df.head(10))
    
    st.subheader('Chart of the dataset survived')
    st.bar_chart(df['survived'].value_counts())
    
    #other chart
    st.subheader('Chart of the sex dataset')
    st.bar_chart(df['sex'].value_counts())
    
    st.subheader('Chart of the age dataset')
    st.bar_chart(df['age'].value_counts())
    
with features:
    st.header('The features I created')
    st.text('I created new features from the existing ones')
    
    #new features
    df['new_feature'] = df['age'] + df['fare']
    st.write('New Feature (age + fare):')
    st.dataframe(df[['age', 'fare', 'new_feature']].head(10))

    
with model_training:
    st.header('Time to train the model')
    st.text('Here you get to choose the hyperparameters of the model and see how the performance changes')
    
    #making columns
    input, display = st.columns(2)
    
    max_depth = input.slider('How many people do you know?', min_value=0, max_value=100, value=10)
    
    
    n_estimators = input.selectbox('How many trees do you want in your forest?', options=[100, 200, 300, 'No limit'], index=0)
    if n_estimators == 'No limit':
        n_estimators = None
        
    #Input features from user         
    input.write(df.columns)
    input_features = input.text_input('Enter the input features:', value='')
    input_features_list = [f.strip() for f in input_features.split(',')]
    
# Machine learning model    
    model = RandomForestClassifier(n_estimators=n_estimators, max_depth=max_depth)
    if n_estimators == 'No limit':
        model = RandomForestClassifier(n_estimators=1000, max_depth=max_depth)
    else:
        model = RandomForestClassifier(n_estimators=n_estimators, max_depth=max_depth)
    
#defining X and y
    X = df[[input_features.strip()]]
    y = df['survived']

#fit our model
    model.fit(X, y)
    pred = model.predict(X)

#Display metrics

    display.subheader('Mean absolute error of the model is:')
    display.write(mean_absolute_error(y, pred))
    display.subheader('Mean squared error of the model is:')
    display.write(mean_squared_error(y, pred))
    display.subheader('R squared of the model is:')
    display.write(r2_score(y, pred))
